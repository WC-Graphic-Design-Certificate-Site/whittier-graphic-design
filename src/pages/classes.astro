---
import InnerPage from "../layouts/InnerPage.astro";
import InnerHero from "../components/InnerHero.astro";
import Courses from "../components/Courses.astro";
import BackToTop from "../components/BackToTop.astro";
import { courses } from "../data/courses";
import { SEO } from "astro-seo";
import { getCurrentPage } from "../data/pages";
import { urlFor } from "../utils/sanity";

const currentPage = getCurrentPage("53402f72-0252-400f-bc89-d7a2c3b8e0a0");
const { title, image, seo } = currentPage;
// const bgImage = urlFor(image).width(1000).auto("format").url();
---

<InnerPage>
  <SEO
    slot="pageHead"
    title={seo.title}
    description={seo.description}
    openGraph={{
      basic: {
        title: seo.openGraph.title,
        type: "website",
        image: urlFor(seo.openGraph.image).width(1200).auto("format").url(),
      },
      optional: {
        description: seo.openGraph.description,
      },
    }}
  />
  <InnerHero slot="hero" title={title} image={image} />
  <div slot="content" id="courses">
    <Courses courses={courses} />
    <BackToTop />
  </div>
</InnerPage>

<style>
  .course-links.cluster {
    --cluster-space: 1.25rem;
    margin-bottom: var(--space-2xl);
  }

  .course-links .nav-link {
    color: var(--color-brand-primary-dark);
    font-family: var(--font-sans);
    font-size: var(--step-0);
    transition: all 0.2s ease;
  }

  .course-links span {
    margin-right: 1.25rem;
  }

  .nav-link:hover {
    text-decoration: underline;
  }
</style>

<script>
  // import fitty from "fitty";
  // fitty(".fit-content p");
  // fitty(".number");
  // const numberContainer = document.querySelectorAll(".number");
  // console.log(numberContainer);

  // const scrollBtn = document.getElementById("scroll-to-top");
  // const watch = document.getElementById("content");
  // function intersectionHandler(entries) {
  //   entries.forEach((entry) => {
  //     if (entry.isIntersecting) {
  //       scrollBtn.classList.remove("hide");
  //     } else {
  //       scrollBtn.classList.add("hide");
  //     }
  //   });
  // }
  // const observer = new window.IntersectionObserver(intersectionHandler, {
  //   rootMargin: "0px 0px -70% 0px",
  // });
  // observer.observe(watch);
</script>
